%calculate fft of partitioned h and store in cell array, also output the
%total length of all partioned h
function [y,h_array] = nonUniformSize(h,sig_block_size)

filter_size = length(h);
sum = 0;%track where the next partition should begin
count = 1;

while sum<filter_size
    filter_block_size = 128 * 2 ^ floor((count-1)/2);
    count = count +1;
    sum = sum + filter_block_size;
end
y = sum;
h = [h;zeros(sum-filter_size,1)];

sum = 1;
h_array = cell(count-1,1);
count = 1;

while sum<filter_size
    filter_block_size = 128 * 2 ^ floor((count-1)/2);
    count = count + 1;
    block_h = h(sum:sum+filter_block_size-1);
    fft_h = fft(block_h,sig_block_size+filter_block_size-1);
    h_array(count-1) = {fft_h};
    sum = sum + filter_block_size;
    
end
end

